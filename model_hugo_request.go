/*
GroupDocs.Translation SDK

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 24.3.0
Contact: anton.perhunov@aspose.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package groupdocs_translation_cloud

import (
	"encoding/json"
)

// checks if the HugoRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HugoRequest{}

// HugoRequest struct for HugoRequest
type HugoRequest struct {
	// File as byte array
	File NullableString `json:"file,omitempty"`
	// Link to file for translation
	Url NullableString `json:"url,omitempty"`
}

// NewHugoRequest instantiates a new HugoRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHugoRequest() *HugoRequest {
	this := HugoRequest{}
	return &this
}

// NewHugoRequestWithDefaults instantiates a new HugoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHugoRequestWithDefaults() *HugoRequest {
	this := HugoRequest{}
	return &this
}

// GetFile returns the File field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HugoRequest) GetFile() string {
	if o == nil || IsNil(o.File.Get()) {
		var ret string
		return ret
	}
	return *o.File.Get()
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HugoRequest) GetFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.File.Get(), o.File.IsSet()
}

// HasFile returns a boolean if a field has been set.
func (o *HugoRequest) HasFile() bool {
	if o != nil && o.File.IsSet() {
		return true
	}

	return false
}

// SetFile gets a reference to the given NullableString and assigns it to the File field.
func (o *HugoRequest) SetFile(v string) {
	o.File.Set(&v)
}

// SetFileNil sets the value for File to be an explicit nil
func (o *HugoRequest) SetFileNil() {
	o.File.Set(nil)
}

// UnsetFile ensures that no value is present for File, not even an explicit nil
func (o *HugoRequest) UnsetFile() {
	o.File.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HugoRequest) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HugoRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *HugoRequest) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *HugoRequest) SetUrl(v string) {
	o.Url.Set(&v)
}

// SetUrlNil sets the value for Url to be an explicit nil
func (o *HugoRequest) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *HugoRequest) UnsetUrl() {
	o.Url.Unset()
}

func (o HugoRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HugoRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.File.IsSet() {
		toSerialize["file"] = o.File.Get()
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	return toSerialize, nil
}

type NullableHugoRequest struct {
	value *HugoRequest
	isSet bool
}

func (v NullableHugoRequest) Get() *HugoRequest {
	return v.value
}

func (v *NullableHugoRequest) Set(val *HugoRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHugoRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHugoRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHugoRequest(val *HugoRequest) *NullableHugoRequest {
	return &NullableHugoRequest{value: val, isSet: true}
}

func (v NullableHugoRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHugoRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
