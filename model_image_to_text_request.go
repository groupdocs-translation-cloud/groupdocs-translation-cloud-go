/*
GroupDocs.Translation SDK

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 23.9.4
Contact: anton.perhunov@aspose.com
*/


package groupdocs_translation_api

import (
	"encoding/json"
)

// checks if the ImageToTextRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageToTextRequest{}

// ImageToTextRequest struct for ImageToTextRequest
type ImageToTextRequest struct {
	// Originnal file format
	Format *string `json:"format,omitempty"`
	// Language of original file
	Source *string `json:"source,omitempty"`
	// List of target languages
	Targets []string `json:"targets,omitempty"`
	// File for translation
	File NullableString `json:"file,omitempty"`
	// Link to file for translation
	Url NullableString `json:"url,omitempty"`
	// Left to write angle to rotate scanned image / pdf
	Rotate *int32 `json:"rotate,omitempty"`
	// is handwritten text
	Ishandwritten *bool `json:"ishandwritten,omitempty"`
	// for analysis only
	Origin NullableString `json:"origin,omitempty"`
	// endpoints route
	Route NullableString `json:"route,omitempty"`
}

// NewImageToTextRequest instantiates a new ImageToTextRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageToTextRequest() *ImageToTextRequest {
	this := ImageToTextRequest{}
	var format string = "Unknown"
	this.Format = &format
	var source string = "en"
	this.Source = &source
	return &this
}

// NewImageToTextRequestWithDefaults instantiates a new ImageToTextRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageToTextRequestWithDefaults() *ImageToTextRequest {
	this := ImageToTextRequest{}
	var format string = "Unknown"
	this.Format = &format
	var source string = "en"
	this.Source = &source
	return &this
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *ImageToTextRequest) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageToTextRequest) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *ImageToTextRequest) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *ImageToTextRequest) SetFormat(v string) {
	o.Format = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ImageToTextRequest) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageToTextRequest) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ImageToTextRequest) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *ImageToTextRequest) SetSource(v string) {
	o.Source = &v
}

// GetTargets returns the Targets field value if set, zero value otherwise.
func (o *ImageToTextRequest) GetTargets() []string {
	if o == nil || IsNil(o.Targets) {
		var ret []string
		return ret
	}
	return o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageToTextRequest) GetTargetsOk() ([]string, bool) {
	if o == nil || IsNil(o.Targets) {
		return nil, false
	}
	return o.Targets, true
}

// HasTargets returns a boolean if a field has been set.
func (o *ImageToTextRequest) HasTargets() bool {
	if o != nil && !IsNil(o.Targets) {
		return true
	}

	return false
}

// SetTargets gets a reference to the given []string and assigns it to the Targets field.
func (o *ImageToTextRequest) SetTargets(v []string) {
	o.Targets = v
}

// GetFile returns the File field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageToTextRequest) GetFile() string {
	if o == nil || IsNil(o.File.Get()) {
		var ret string
		return ret
	}
	return *o.File.Get()
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageToTextRequest) GetFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.File.Get(), o.File.IsSet()
}

// HasFile returns a boolean if a field has been set.
func (o *ImageToTextRequest) HasFile() bool {
	if o != nil && o.File.IsSet() {
		return true
	}

	return false
}

// SetFile gets a reference to the given NullableString and assigns it to the File field.
func (o *ImageToTextRequest) SetFile(v string) {
	o.File.Set(&v)
}
// SetFileNil sets the value for File to be an explicit nil
func (o *ImageToTextRequest) SetFileNil() {
	o.File.Set(nil)
}

// UnsetFile ensures that no value is present for File, not even an explicit nil
func (o *ImageToTextRequest) UnsetFile() {
	o.File.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageToTextRequest) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageToTextRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *ImageToTextRequest) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *ImageToTextRequest) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *ImageToTextRequest) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *ImageToTextRequest) UnsetUrl() {
	o.Url.Unset()
}

// GetRotate returns the Rotate field value if set, zero value otherwise.
func (o *ImageToTextRequest) GetRotate() int32 {
	if o == nil || IsNil(o.Rotate) {
		var ret int32
		return ret
	}
	return *o.Rotate
}

// GetRotateOk returns a tuple with the Rotate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageToTextRequest) GetRotateOk() (*int32, bool) {
	if o == nil || IsNil(o.Rotate) {
		return nil, false
	}
	return o.Rotate, true
}

// HasRotate returns a boolean if a field has been set.
func (o *ImageToTextRequest) HasRotate() bool {
	if o != nil && !IsNil(o.Rotate) {
		return true
	}

	return false
}

// SetRotate gets a reference to the given int32 and assigns it to the Rotate field.
func (o *ImageToTextRequest) SetRotate(v int32) {
	o.Rotate = &v
}

// GetIshandwritten returns the Ishandwritten field value if set, zero value otherwise.
func (o *ImageToTextRequest) GetIshandwritten() bool {
	if o == nil || IsNil(o.Ishandwritten) {
		var ret bool
		return ret
	}
	return *o.Ishandwritten
}

// GetIshandwrittenOk returns a tuple with the Ishandwritten field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageToTextRequest) GetIshandwrittenOk() (*bool, bool) {
	if o == nil || IsNil(o.Ishandwritten) {
		return nil, false
	}
	return o.Ishandwritten, true
}

// HasIshandwritten returns a boolean if a field has been set.
func (o *ImageToTextRequest) HasIshandwritten() bool {
	if o != nil && !IsNil(o.Ishandwritten) {
		return true
	}

	return false
}

// SetIshandwritten gets a reference to the given bool and assigns it to the Ishandwritten field.
func (o *ImageToTextRequest) SetIshandwritten(v bool) {
	o.Ishandwritten = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageToTextRequest) GetOrigin() string {
	if o == nil || IsNil(o.Origin.Get()) {
		var ret string
		return ret
	}
	return *o.Origin.Get()
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageToTextRequest) GetOriginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Origin.Get(), o.Origin.IsSet()
}

// HasOrigin returns a boolean if a field has been set.
func (o *ImageToTextRequest) HasOrigin() bool {
	if o != nil && o.Origin.IsSet() {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given NullableString and assigns it to the Origin field.
func (o *ImageToTextRequest) SetOrigin(v string) {
	o.Origin.Set(&v)
}
// SetOriginNil sets the value for Origin to be an explicit nil
func (o *ImageToTextRequest) SetOriginNil() {
	o.Origin.Set(nil)
}

// UnsetOrigin ensures that no value is present for Origin, not even an explicit nil
func (o *ImageToTextRequest) UnsetOrigin() {
	o.Origin.Unset()
}

// GetRoute returns the Route field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageToTextRequest) GetRoute() string {
	if o == nil || IsNil(o.Route.Get()) {
		var ret string
		return ret
	}
	return *o.Route.Get()
}

// GetRouteOk returns a tuple with the Route field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageToTextRequest) GetRouteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Route.Get(), o.Route.IsSet()
}

// HasRoute returns a boolean if a field has been set.
func (o *ImageToTextRequest) HasRoute() bool {
	if o != nil && o.Route.IsSet() {
		return true
	}

	return false
}

// SetRoute gets a reference to the given NullableString and assigns it to the Route field.
func (o *ImageToTextRequest) SetRoute(v string) {
	o.Route.Set(&v)
}
// SetRouteNil sets the value for Route to be an explicit nil
func (o *ImageToTextRequest) SetRouteNil() {
	o.Route.Set(nil)
}

// UnsetRoute ensures that no value is present for Route, not even an explicit nil
func (o *ImageToTextRequest) UnsetRoute() {
	o.Route.Unset()
}

func (o ImageToTextRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageToTextRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Targets) {
		toSerialize["targets"] = o.Targets
	}
	if o.File.IsSet() {
		toSerialize["file"] = o.File.Get()
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if !IsNil(o.Rotate) {
		toSerialize["rotate"] = o.Rotate
	}
	if !IsNil(o.Ishandwritten) {
		toSerialize["ishandwritten"] = o.Ishandwritten
	}
	if o.Origin.IsSet() {
		toSerialize["origin"] = o.Origin.Get()
	}
	if o.Route.IsSet() {
		toSerialize["route"] = o.Route.Get()
	}
	return toSerialize, nil
}

type NullableImageToTextRequest struct {
	value *ImageToTextRequest
	isSet bool
}

func (v NullableImageToTextRequest) Get() *ImageToTextRequest {
	return v.value
}

func (v *NullableImageToTextRequest) Set(val *ImageToTextRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableImageToTextRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableImageToTextRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageToTextRequest(val *ImageToTextRequest) *NullableImageToTextRequest {
	return &NullableImageToTextRequest{value: val, isSet: true}
}

func (v NullableImageToTextRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageToTextRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


