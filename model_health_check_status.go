/*
GroupDocs.Translation SDK

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 25.3.0
Contact: anton.perhunov@aspose.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package groupdocs_translation_cloud

import (
	"encoding/json"
)

// checks if the HealthCheckStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HealthCheckStatus{}

// HealthCheckStatus struct for HealthCheckStatus
type HealthCheckStatus struct {
	Items []HealthCheckEntity `json:"items,omitempty"`
}

// NewHealthCheckStatus instantiates a new HealthCheckStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHealthCheckStatus() *HealthCheckStatus {
	this := HealthCheckStatus{}
	return &this
}

// NewHealthCheckStatusWithDefaults instantiates a new HealthCheckStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHealthCheckStatusWithDefaults() *HealthCheckStatus {
	this := HealthCheckStatus{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HealthCheckStatus) GetItems() []HealthCheckEntity {
	if o == nil {
		var ret []HealthCheckEntity
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HealthCheckStatus) GetItemsOk() ([]HealthCheckEntity, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *HealthCheckStatus) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []HealthCheckEntity and assigns it to the Items field.
func (o *HealthCheckStatus) SetItems(v []HealthCheckEntity) {
	o.Items = v
}

func (o HealthCheckStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HealthCheckStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableHealthCheckStatus struct {
	value *HealthCheckStatus
	isSet bool
}

func (v NullableHealthCheckStatus) Get() *HealthCheckStatus {
	return v.value
}

func (v *NullableHealthCheckStatus) Set(val *HealthCheckStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableHealthCheckStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableHealthCheckStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHealthCheckStatus(val *HealthCheckStatus) *NullableHealthCheckStatus {
	return &NullableHealthCheckStatus{value: val, isSet: true}
}

func (v NullableHealthCheckStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHealthCheckStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


