/*
GroupDocs.Translation SDK

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 24.3.0
Contact: anton.perhunov@aspose.com
*/

package groupdocs_translation_cloud

import (
	"encoding/json"
)

// checks if the CloudFileResponseWithAdditionalInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudFileResponseWithAdditionalInfo{}

// CloudFileResponseWithAdditionalInfo struct for CloudFileResponseWithAdditionalInfo
type CloudFileResponseWithAdditionalInfo struct {
	Status  *HttpStatusCode        `json:"status,omitempty"`
	Message NullableString         `json:"message,omitempty"`
	Urls    map[string]UrlFileInfo `json:"urls,omitempty"`
	Scores  map[string]float32     `json:"scores,omitempty"`
	Request *CloudFileRequest      `json:"request,omitempty"`
	Details map[string]string      `json:"details,omitempty"`
}

// NewCloudFileResponseWithAdditionalInfo instantiates a new CloudFileResponseWithAdditionalInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudFileResponseWithAdditionalInfo() *CloudFileResponseWithAdditionalInfo {
	this := CloudFileResponseWithAdditionalInfo{}
	return &this
}

// NewCloudFileResponseWithAdditionalInfoWithDefaults instantiates a new CloudFileResponseWithAdditionalInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudFileResponseWithAdditionalInfoWithDefaults() *CloudFileResponseWithAdditionalInfo {
	this := CloudFileResponseWithAdditionalInfo{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CloudFileResponseWithAdditionalInfo) GetStatus() HttpStatusCode {
	if o == nil || IsNil(o.Status) {
		var ret HttpStatusCode
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFileResponseWithAdditionalInfo) GetStatusOk() (*HttpStatusCode, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CloudFileResponseWithAdditionalInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given HttpStatusCode and assigns it to the Status field.
func (o *CloudFileResponseWithAdditionalInfo) SetStatus(v HttpStatusCode) {
	o.Status = &v
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudFileResponseWithAdditionalInfo) GetMessage() string {
	if o == nil || IsNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudFileResponseWithAdditionalInfo) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *CloudFileResponseWithAdditionalInfo) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *CloudFileResponseWithAdditionalInfo) SetMessage(v string) {
	o.Message.Set(&v)
}

// SetMessageNil sets the value for Message to be an explicit nil
func (o *CloudFileResponseWithAdditionalInfo) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *CloudFileResponseWithAdditionalInfo) UnsetMessage() {
	o.Message.Unset()
}

// GetUrls returns the Urls field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudFileResponseWithAdditionalInfo) GetUrls() map[string]UrlFileInfo {
	if o == nil {
		var ret map[string]UrlFileInfo
		return ret
	}
	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudFileResponseWithAdditionalInfo) GetUrlsOk() (*map[string]UrlFileInfo, bool) {
	if o == nil || IsNil(o.Urls) {
		return nil, false
	}
	return &o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *CloudFileResponseWithAdditionalInfo) HasUrls() bool {
	if o != nil && IsNil(o.Urls) {
		return true
	}

	return false
}

// SetUrls gets a reference to the given map[string]UrlFileInfo and assigns it to the Urls field.
func (o *CloudFileResponseWithAdditionalInfo) SetUrls(v map[string]UrlFileInfo) {
	o.Urls = v
}

// GetScores returns the Scores field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudFileResponseWithAdditionalInfo) GetScores() map[string]float32 {
	if o == nil {
		var ret map[string]float32
		return ret
	}
	return o.Scores
}

// GetScoresOk returns a tuple with the Scores field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudFileResponseWithAdditionalInfo) GetScoresOk() (*map[string]float32, bool) {
	if o == nil || IsNil(o.Scores) {
		return nil, false
	}
	return &o.Scores, true
}

// HasScores returns a boolean if a field has been set.
func (o *CloudFileResponseWithAdditionalInfo) HasScores() bool {
	if o != nil && IsNil(o.Scores) {
		return true
	}

	return false
}

// SetScores gets a reference to the given map[string]float32 and assigns it to the Scores field.
func (o *CloudFileResponseWithAdditionalInfo) SetScores(v map[string]float32) {
	o.Scores = v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *CloudFileResponseWithAdditionalInfo) GetRequest() CloudFileRequest {
	if o == nil || IsNil(o.Request) {
		var ret CloudFileRequest
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFileResponseWithAdditionalInfo) GetRequestOk() (*CloudFileRequest, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *CloudFileResponseWithAdditionalInfo) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given CloudFileRequest and assigns it to the Request field.
func (o *CloudFileResponseWithAdditionalInfo) SetRequest(v CloudFileRequest) {
	o.Request = &v
}

// GetDetails returns the Details field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudFileResponseWithAdditionalInfo) GetDetails() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudFileResponseWithAdditionalInfo) GetDetailsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return &o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *CloudFileResponseWithAdditionalInfo) HasDetails() bool {
	if o != nil && IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given map[string]string and assigns it to the Details field.
func (o *CloudFileResponseWithAdditionalInfo) SetDetails(v map[string]string) {
	o.Details = v
}

func (o CloudFileResponseWithAdditionalInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudFileResponseWithAdditionalInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if o.Urls != nil {
		toSerialize["urls"] = o.Urls
	}
	if o.Scores != nil {
		toSerialize["scores"] = o.Scores
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	return toSerialize, nil
}

type NullableCloudFileResponseWithAdditionalInfo struct {
	value *CloudFileResponseWithAdditionalInfo
	isSet bool
}

func (v NullableCloudFileResponseWithAdditionalInfo) Get() *CloudFileResponseWithAdditionalInfo {
	return v.value
}

func (v *NullableCloudFileResponseWithAdditionalInfo) Set(val *CloudFileResponseWithAdditionalInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudFileResponseWithAdditionalInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudFileResponseWithAdditionalInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudFileResponseWithAdditionalInfo(val *CloudFileResponseWithAdditionalInfo) *NullableCloudFileResponseWithAdditionalInfo {
	return &NullableCloudFileResponseWithAdditionalInfo{value: val, isSet: true}
}

func (v NullableCloudFileResponseWithAdditionalInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudFileResponseWithAdditionalInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
