/*
GroupDocs.Translation SDK

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 24.3.0
Contact: anton.perhunov@aspose.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package groupdocs_translation_cloud

import (
	"encoding/json"
)

// checks if the CloudFileResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudFileResponse{}

// CloudFileResponse struct for CloudFileResponse
type CloudFileResponse struct {
	Status  *HttpStatusCode        `json:"status,omitempty"`
	Message NullableString         `json:"message,omitempty"`
	Urls    map[string]UrlFileInfo `json:"urls,omitempty"`
	Scores  map[string]float32     `json:"scores,omitempty"`
}

// NewCloudFileResponse instantiates a new CloudFileResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudFileResponse() *CloudFileResponse {
	this := CloudFileResponse{}
	return &this
}

// NewCloudFileResponseWithDefaults instantiates a new CloudFileResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudFileResponseWithDefaults() *CloudFileResponse {
	this := CloudFileResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CloudFileResponse) GetStatus() HttpStatusCode {
	if o == nil || IsNil(o.Status) {
		var ret HttpStatusCode
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFileResponse) GetStatusOk() (*HttpStatusCode, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CloudFileResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given HttpStatusCode and assigns it to the Status field.
func (o *CloudFileResponse) SetStatus(v HttpStatusCode) {
	o.Status = &v
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudFileResponse) GetMessage() string {
	if o == nil || IsNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudFileResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *CloudFileResponse) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *CloudFileResponse) SetMessage(v string) {
	o.Message.Set(&v)
}

// SetMessageNil sets the value for Message to be an explicit nil
func (o *CloudFileResponse) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *CloudFileResponse) UnsetMessage() {
	o.Message.Unset()
}

// GetUrls returns the Urls field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudFileResponse) GetUrls() map[string]UrlFileInfo {
	if o == nil {
		var ret map[string]UrlFileInfo
		return ret
	}
	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudFileResponse) GetUrlsOk() (*map[string]UrlFileInfo, bool) {
	if o == nil || IsNil(o.Urls) {
		return nil, false
	}
	return &o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *CloudFileResponse) HasUrls() bool {
	if o != nil && !IsNil(o.Urls) {
		return true
	}

	return false
}

// SetUrls gets a reference to the given map[string]UrlFileInfo and assigns it to the Urls field.
func (o *CloudFileResponse) SetUrls(v map[string]UrlFileInfo) {
	o.Urls = v
}

// GetScores returns the Scores field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudFileResponse) GetScores() map[string]float32 {
	if o == nil {
		var ret map[string]float32
		return ret
	}
	return o.Scores
}

// GetScoresOk returns a tuple with the Scores field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudFileResponse) GetScoresOk() (*map[string]float32, bool) {
	if o == nil || IsNil(o.Scores) {
		return nil, false
	}
	return &o.Scores, true
}

// HasScores returns a boolean if a field has been set.
func (o *CloudFileResponse) HasScores() bool {
	if o != nil && !IsNil(o.Scores) {
		return true
	}

	return false
}

// SetScores gets a reference to the given map[string]float32 and assigns it to the Scores field.
func (o *CloudFileResponse) SetScores(v map[string]float32) {
	o.Scores = v
}

func (o CloudFileResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudFileResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if o.Urls != nil {
		toSerialize["urls"] = o.Urls
	}
	if o.Scores != nil {
		toSerialize["scores"] = o.Scores
	}
	return toSerialize, nil
}

type NullableCloudFileResponse struct {
	value *CloudFileResponse
	isSet bool
}

func (v NullableCloudFileResponse) Get() *CloudFileResponse {
	return v.value
}

func (v *NullableCloudFileResponse) Set(val *CloudFileResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudFileResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudFileResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudFileResponse(val *CloudFileResponse) *NullableCloudFileResponse {
	return &NullableCloudFileResponse{value: val, isSet: true}
}

func (v NullableCloudFileResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudFileResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
