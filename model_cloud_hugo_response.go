/*
GroupDocs.Translation SDK

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 24.3.0
Contact: anton.perhunov@aspose.com
*/

package groupdocs_translation_cloud

import (
	"encoding/json"
)

// checks if the CloudHugoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudHugoResponse{}

// CloudHugoResponse struct for CloudHugoResponse
type CloudHugoResponse struct {
	Status *HttpStatusCode `json:"status,omitempty"`
	// If file was parsed correctly or text of error
	Message NullableString `json:"message,omitempty"`
	// Structure of front matter syntax
	Frontmatters [][]string `json:"frontmatters,omitempty"`
	// Structure of short code syntax
	Shortcodes map[string][][]string `json:"shortcodes,omitempty"`
}

// NewCloudHugoResponse instantiates a new CloudHugoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudHugoResponse() *CloudHugoResponse {
	this := CloudHugoResponse{}
	return &this
}

// NewCloudHugoResponseWithDefaults instantiates a new CloudHugoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudHugoResponseWithDefaults() *CloudHugoResponse {
	this := CloudHugoResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CloudHugoResponse) GetStatus() HttpStatusCode {
	if o == nil || IsNil(o.Status) {
		var ret HttpStatusCode
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudHugoResponse) GetStatusOk() (*HttpStatusCode, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CloudHugoResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given HttpStatusCode and assigns it to the Status field.
func (o *CloudHugoResponse) SetStatus(v HttpStatusCode) {
	o.Status = &v
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudHugoResponse) GetMessage() string {
	if o == nil || IsNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudHugoResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *CloudHugoResponse) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *CloudHugoResponse) SetMessage(v string) {
	o.Message.Set(&v)
}

// SetMessageNil sets the value for Message to be an explicit nil
func (o *CloudHugoResponse) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *CloudHugoResponse) UnsetMessage() {
	o.Message.Unset()
}

// GetFrontmatters returns the Frontmatters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudHugoResponse) GetFrontmatters() [][]string {
	if o == nil {
		var ret [][]string
		return ret
	}
	return o.Frontmatters
}

// GetFrontmattersOk returns a tuple with the Frontmatters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudHugoResponse) GetFrontmattersOk() ([][]string, bool) {
	if o == nil || IsNil(o.Frontmatters) {
		return nil, false
	}
	return o.Frontmatters, true
}

// HasFrontmatters returns a boolean if a field has been set.
func (o *CloudHugoResponse) HasFrontmatters() bool {
	if o != nil && IsNil(o.Frontmatters) {
		return true
	}

	return false
}

// SetFrontmatters gets a reference to the given [][]string and assigns it to the Frontmatters field.
func (o *CloudHugoResponse) SetFrontmatters(v [][]string) {
	o.Frontmatters = v
}

// GetShortcodes returns the Shortcodes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudHugoResponse) GetShortcodes() map[string][][]string {
	if o == nil {
		var ret map[string][][]string
		return ret
	}
	return o.Shortcodes
}

// GetShortcodesOk returns a tuple with the Shortcodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudHugoResponse) GetShortcodesOk() (*map[string][][]string, bool) {
	if o == nil || IsNil(o.Shortcodes) {
		return nil, false
	}
	return &o.Shortcodes, true
}

// HasShortcodes returns a boolean if a field has been set.
func (o *CloudHugoResponse) HasShortcodes() bool {
	if o != nil && IsNil(o.Shortcodes) {
		return true
	}

	return false
}

// SetShortcodes gets a reference to the given map[string][][]string and assigns it to the Shortcodes field.
func (o *CloudHugoResponse) SetShortcodes(v map[string][][]string) {
	o.Shortcodes = v
}

func (o CloudHugoResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudHugoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if o.Frontmatters != nil {
		toSerialize["frontmatters"] = o.Frontmatters
	}
	if o.Shortcodes != nil {
		toSerialize["shortcodes"] = o.Shortcodes
	}
	return toSerialize, nil
}

type NullableCloudHugoResponse struct {
	value *CloudHugoResponse
	isSet bool
}

func (v NullableCloudHugoResponse) Get() *CloudHugoResponse {
	return v.value
}

func (v *NullableCloudHugoResponse) Set(val *CloudHugoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudHugoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudHugoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudHugoResponse(val *CloudHugoResponse) *NullableCloudHugoResponse {
	return &NullableCloudHugoResponse{value: val, isSet: true}
}

func (v NullableCloudHugoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudHugoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
