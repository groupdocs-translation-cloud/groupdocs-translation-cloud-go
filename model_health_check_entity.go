/*
GroupDocs.Translation SDK

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 24.3.0
Contact: anton.perhunov@aspose.com
*/

package groupdocs_translation_cloud

import (
	"encoding/json"
)

// checks if the HealthCheckEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HealthCheckEntity{}

// HealthCheckEntity struct for HealthCheckEntity
type HealthCheckEntity struct {
	Name      NullableString `json:"name,omitempty"`
	IsHealthy *bool          `json:"isHealthy,omitempty"`
	Message   NullableString `json:"message,omitempty"`
}

// NewHealthCheckEntity instantiates a new HealthCheckEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHealthCheckEntity() *HealthCheckEntity {
	this := HealthCheckEntity{}
	return &this
}

// NewHealthCheckEntityWithDefaults instantiates a new HealthCheckEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHealthCheckEntityWithDefaults() *HealthCheckEntity {
	this := HealthCheckEntity{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HealthCheckEntity) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HealthCheckEntity) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *HealthCheckEntity) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *HealthCheckEntity) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *HealthCheckEntity) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *HealthCheckEntity) UnsetName() {
	o.Name.Unset()
}

// GetIsHealthy returns the IsHealthy field value if set, zero value otherwise.
func (o *HealthCheckEntity) GetIsHealthy() bool {
	if o == nil || IsNil(o.IsHealthy) {
		var ret bool
		return ret
	}
	return *o.IsHealthy
}

// GetIsHealthyOk returns a tuple with the IsHealthy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthCheckEntity) GetIsHealthyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsHealthy) {
		return nil, false
	}
	return o.IsHealthy, true
}

// HasIsHealthy returns a boolean if a field has been set.
func (o *HealthCheckEntity) HasIsHealthy() bool {
	if o != nil && !IsNil(o.IsHealthy) {
		return true
	}

	return false
}

// SetIsHealthy gets a reference to the given bool and assigns it to the IsHealthy field.
func (o *HealthCheckEntity) SetIsHealthy(v bool) {
	o.IsHealthy = &v
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HealthCheckEntity) GetMessage() string {
	if o == nil || IsNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HealthCheckEntity) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *HealthCheckEntity) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *HealthCheckEntity) SetMessage(v string) {
	o.Message.Set(&v)
}

// SetMessageNil sets the value for Message to be an explicit nil
func (o *HealthCheckEntity) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *HealthCheckEntity) UnsetMessage() {
	o.Message.Unset()
}

func (o HealthCheckEntity) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HealthCheckEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if !IsNil(o.IsHealthy) {
		toSerialize["isHealthy"] = o.IsHealthy
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	return toSerialize, nil
}

type NullableHealthCheckEntity struct {
	value *HealthCheckEntity
	isSet bool
}

func (v NullableHealthCheckEntity) Get() *HealthCheckEntity {
	return v.value
}

func (v *NullableHealthCheckEntity) Set(val *HealthCheckEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableHealthCheckEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableHealthCheckEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHealthCheckEntity(val *HealthCheckEntity) *NullableHealthCheckEntity {
	return &NullableHealthCheckEntity{value: val, isSet: true}
}

func (v NullableHealthCheckEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHealthCheckEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
