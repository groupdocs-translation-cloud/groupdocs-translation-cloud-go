/*
GroupDocs.Translation SDK

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 24.3.0
Contact: anton.perhunov@aspose.com
*/

package groupdocs_translation_cloud

import (
	"encoding/json"
)

// checks if the CloudTextResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudTextResponse{}

// CloudTextResponse struct for CloudTextResponse
type CloudTextResponse struct {
	Status *HttpStatusCode `json:"status,omitempty"`
	// If file was translated correctly or text of error
	Message NullableString `json:"message,omitempty"`
	// Translated texts
	Translations map[string][]string `json:"translations,omitempty"`
}

// NewCloudTextResponse instantiates a new CloudTextResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudTextResponse() *CloudTextResponse {
	this := CloudTextResponse{}
	return &this
}

// NewCloudTextResponseWithDefaults instantiates a new CloudTextResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudTextResponseWithDefaults() *CloudTextResponse {
	this := CloudTextResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CloudTextResponse) GetStatus() HttpStatusCode {
	if o == nil || IsNil(o.Status) {
		var ret HttpStatusCode
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudTextResponse) GetStatusOk() (*HttpStatusCode, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CloudTextResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given HttpStatusCode and assigns it to the Status field.
func (o *CloudTextResponse) SetStatus(v HttpStatusCode) {
	o.Status = &v
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudTextResponse) GetMessage() string {
	if o == nil || IsNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudTextResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *CloudTextResponse) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *CloudTextResponse) SetMessage(v string) {
	o.Message.Set(&v)
}

// SetMessageNil sets the value for Message to be an explicit nil
func (o *CloudTextResponse) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *CloudTextResponse) UnsetMessage() {
	o.Message.Unset()
}

// GetTranslations returns the Translations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudTextResponse) GetTranslations() map[string][]string {
	if o == nil {
		var ret map[string][]string
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudTextResponse) GetTranslationsOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return &o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *CloudTextResponse) HasTranslations() bool {
	if o != nil && IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given map[string][]string and assigns it to the Translations field.
func (o *CloudTextResponse) SetTranslations(v map[string][]string) {
	o.Translations = v
}

func (o CloudTextResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudTextResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if o.Translations != nil {
		toSerialize["translations"] = o.Translations
	}
	return toSerialize, nil
}

type NullableCloudTextResponse struct {
	value *CloudTextResponse
	isSet bool
}

func (v NullableCloudTextResponse) Get() *CloudTextResponse {
	return v.value
}

func (v *NullableCloudTextResponse) Set(val *CloudTextResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudTextResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudTextResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudTextResponse(val *CloudTextResponse) *NullableCloudTextResponse {
	return &NullableCloudTextResponse{value: val, isSet: true}
}

func (v NullableCloudTextResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudTextResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
