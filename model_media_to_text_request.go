/*
GroupDocs.Translation SDK

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 25.3.0
Contact: anton.perhunov@aspose.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package groupdocs_translation_cloud

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MediaToTextRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaToTextRequest{}

// MediaToTextRequest struct for MediaToTextRequest
type MediaToTextRequest struct {
	// Language of original file
	SourceLanguage string `json:"sourceLanguage"`
	// List of target languages
	TargetLanguages []string `json:"targetLanguages"`
	// Type in the file name. If null will be as request ID.
	OriginalFileName NullableString `json:"originalFileName,omitempty"`
	// Link to file for translation. Ignore, if \"file\" property not null
	Url string `json:"url"`
	// Url or name of the application using this SDK. Not required.
	Origin NullableString `json:"origin,omitempty"`
	// Do result formating like the source. This option needs more expensive requests.
	IsNeedAlignment *bool `json:"isNeedAlignment,omitempty"`
	// Set a specific translation between source and target words.
	TranslationDictionary map[string]string `json:"translationDictionary,omitempty"`
	// Toggle file saving mode for storage.  Is Files by default.
	SavingMode *string `json:"savingMode,omitempty"`
	// Input file format
	Format string `json:"format"`
	// Time fragments that require translation
	Fragments []string `json:"fragments,omitempty"`
	// endpoints route
	Route NullableString `json:"route,omitempty"`
}

type _MediaToTextRequest MediaToTextRequest

// NewMediaToTextRequest instantiates a new MediaToTextRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaToTextRequest(sourceLanguage string, targetLanguages []string, url string, format string) *MediaToTextRequest {
	this := MediaToTextRequest{}
	this.SourceLanguage = sourceLanguage
	this.TargetLanguages = targetLanguages
	this.Url = url
	this.Format = format
	return &this
}

// NewMediaToTextRequestWithDefaults instantiates a new MediaToTextRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaToTextRequestWithDefaults() *MediaToTextRequest {
	this := MediaToTextRequest{}
	var sourceLanguage string = "en"
	this.SourceLanguage = sourceLanguage
	var format string = "Mp3"
	this.Format = format
	return &this
}

// GetSourceLanguage returns the SourceLanguage field value
func (o *MediaToTextRequest) GetSourceLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceLanguage
}

// GetSourceLanguageOk returns a tuple with the SourceLanguage field value
// and a boolean to check if the value has been set.
func (o *MediaToTextRequest) GetSourceLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceLanguage, true
}

// SetSourceLanguage sets field value
func (o *MediaToTextRequest) SetSourceLanguage(v string) {
	o.SourceLanguage = v
}

// GetTargetLanguages returns the TargetLanguages field value
func (o *MediaToTextRequest) GetTargetLanguages() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TargetLanguages
}

// GetTargetLanguagesOk returns a tuple with the TargetLanguages field value
// and a boolean to check if the value has been set.
func (o *MediaToTextRequest) GetTargetLanguagesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetLanguages, true
}

// SetTargetLanguages sets field value
func (o *MediaToTextRequest) SetTargetLanguages(v []string) {
	o.TargetLanguages = v
}

// GetOriginalFileName returns the OriginalFileName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaToTextRequest) GetOriginalFileName() string {
	if o == nil || IsNil(o.OriginalFileName.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalFileName.Get()
}

// GetOriginalFileNameOk returns a tuple with the OriginalFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaToTextRequest) GetOriginalFileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalFileName.Get(), o.OriginalFileName.IsSet()
}

// HasOriginalFileName returns a boolean if a field has been set.
func (o *MediaToTextRequest) HasOriginalFileName() bool {
	if o != nil && o.OriginalFileName.IsSet() {
		return true
	}

	return false
}

// SetOriginalFileName gets a reference to the given NullableString and assigns it to the OriginalFileName field.
func (o *MediaToTextRequest) SetOriginalFileName(v string) {
	o.OriginalFileName.Set(&v)
}
// SetOriginalFileNameNil sets the value for OriginalFileName to be an explicit nil
func (o *MediaToTextRequest) SetOriginalFileNameNil() {
	o.OriginalFileName.Set(nil)
}

// UnsetOriginalFileName ensures that no value is present for OriginalFileName, not even an explicit nil
func (o *MediaToTextRequest) UnsetOriginalFileName() {
	o.OriginalFileName.Unset()
}

// GetUrl returns the Url field value
func (o *MediaToTextRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *MediaToTextRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *MediaToTextRequest) SetUrl(v string) {
	o.Url = v
}

// GetOrigin returns the Origin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaToTextRequest) GetOrigin() string {
	if o == nil || IsNil(o.Origin.Get()) {
		var ret string
		return ret
	}
	return *o.Origin.Get()
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaToTextRequest) GetOriginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Origin.Get(), o.Origin.IsSet()
}

// HasOrigin returns a boolean if a field has been set.
func (o *MediaToTextRequest) HasOrigin() bool {
	if o != nil && o.Origin.IsSet() {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given NullableString and assigns it to the Origin field.
func (o *MediaToTextRequest) SetOrigin(v string) {
	o.Origin.Set(&v)
}
// SetOriginNil sets the value for Origin to be an explicit nil
func (o *MediaToTextRequest) SetOriginNil() {
	o.Origin.Set(nil)
}

// UnsetOrigin ensures that no value is present for Origin, not even an explicit nil
func (o *MediaToTextRequest) UnsetOrigin() {
	o.Origin.Unset()
}

// GetIsNeedAlignment returns the IsNeedAlignment field value if set, zero value otherwise.
func (o *MediaToTextRequest) GetIsNeedAlignment() bool {
	if o == nil || IsNil(o.IsNeedAlignment) {
		var ret bool
		return ret
	}
	return *o.IsNeedAlignment
}

// GetIsNeedAlignmentOk returns a tuple with the IsNeedAlignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaToTextRequest) GetIsNeedAlignmentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsNeedAlignment) {
		return nil, false
	}
	return o.IsNeedAlignment, true
}

// HasIsNeedAlignment returns a boolean if a field has been set.
func (o *MediaToTextRequest) HasIsNeedAlignment() bool {
	if o != nil && !IsNil(o.IsNeedAlignment) {
		return true
	}

	return false
}

// SetIsNeedAlignment gets a reference to the given bool and assigns it to the IsNeedAlignment field.
func (o *MediaToTextRequest) SetIsNeedAlignment(v bool) {
	o.IsNeedAlignment = &v
}

// GetTranslationDictionary returns the TranslationDictionary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaToTextRequest) GetTranslationDictionary() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.TranslationDictionary
}

// GetTranslationDictionaryOk returns a tuple with the TranslationDictionary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaToTextRequest) GetTranslationDictionaryOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.TranslationDictionary) {
		return nil, false
	}
	return &o.TranslationDictionary, true
}

// HasTranslationDictionary returns a boolean if a field has been set.
func (o *MediaToTextRequest) HasTranslationDictionary() bool {
	if o != nil && !IsNil(o.TranslationDictionary) {
		return true
	}

	return false
}

// SetTranslationDictionary gets a reference to the given map[string]string and assigns it to the TranslationDictionary field.
func (o *MediaToTextRequest) SetTranslationDictionary(v map[string]string) {
	o.TranslationDictionary = v
}

// GetSavingMode returns the SavingMode field value if set, zero value otherwise.
func (o *MediaToTextRequest) GetSavingMode() string {
	if o == nil || IsNil(o.SavingMode) {
		var ret string
		return ret
	}
	return *o.SavingMode
}

// GetSavingModeOk returns a tuple with the SavingMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaToTextRequest) GetSavingModeOk() (*string, bool) {
	if o == nil || IsNil(o.SavingMode) {
		return nil, false
	}
	return o.SavingMode, true
}

// HasSavingMode returns a boolean if a field has been set.
func (o *MediaToTextRequest) HasSavingMode() bool {
	if o != nil && !IsNil(o.SavingMode) {
		return true
	}

	return false
}

// SetSavingMode gets a reference to the given string and assigns it to the SavingMode field.
func (o *MediaToTextRequest) SetSavingMode(v string) {
	o.SavingMode = &v
}

// GetFormat returns the Format field value
func (o *MediaToTextRequest) GetFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Format
}

// GetFormatOk returns a tuple with the Format field value
// and a boolean to check if the value has been set.
func (o *MediaToTextRequest) GetFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Format, true
}

// SetFormat sets field value
func (o *MediaToTextRequest) SetFormat(v string) {
	o.Format = v
}

// GetFragments returns the Fragments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaToTextRequest) GetFragments() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Fragments
}

// GetFragmentsOk returns a tuple with the Fragments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaToTextRequest) GetFragmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Fragments) {
		return nil, false
	}
	return o.Fragments, true
}

// HasFragments returns a boolean if a field has been set.
func (o *MediaToTextRequest) HasFragments() bool {
	if o != nil && !IsNil(o.Fragments) {
		return true
	}

	return false
}

// SetFragments gets a reference to the given []string and assigns it to the Fragments field.
func (o *MediaToTextRequest) SetFragments(v []string) {
	o.Fragments = v
}

// GetRoute returns the Route field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaToTextRequest) GetRoute() string {
	if o == nil || IsNil(o.Route.Get()) {
		var ret string
		return ret
	}
	return *o.Route.Get()
}

// GetRouteOk returns a tuple with the Route field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaToTextRequest) GetRouteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Route.Get(), o.Route.IsSet()
}

// HasRoute returns a boolean if a field has been set.
func (o *MediaToTextRequest) HasRoute() bool {
	if o != nil && o.Route.IsSet() {
		return true
	}

	return false
}

// SetRoute gets a reference to the given NullableString and assigns it to the Route field.
func (o *MediaToTextRequest) SetRoute(v string) {
	o.Route.Set(&v)
}
// SetRouteNil sets the value for Route to be an explicit nil
func (o *MediaToTextRequest) SetRouteNil() {
	o.Route.Set(nil)
}

// UnsetRoute ensures that no value is present for Route, not even an explicit nil
func (o *MediaToTextRequest) UnsetRoute() {
	o.Route.Unset()
}

func (o MediaToTextRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaToTextRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sourceLanguage"] = o.SourceLanguage
	toSerialize["targetLanguages"] = o.TargetLanguages
	if o.OriginalFileName.IsSet() {
		toSerialize["originalFileName"] = o.OriginalFileName.Get()
	}
	toSerialize["url"] = o.Url
	if o.Origin.IsSet() {
		toSerialize["origin"] = o.Origin.Get()
	}
	if !IsNil(o.IsNeedAlignment) {
		toSerialize["isNeedAlignment"] = o.IsNeedAlignment
	}
	if o.TranslationDictionary != nil {
		toSerialize["translationDictionary"] = o.TranslationDictionary
	}
	if !IsNil(o.SavingMode) {
		toSerialize["savingMode"] = o.SavingMode
	}
	toSerialize["format"] = o.Format
	if o.Fragments != nil {
		toSerialize["fragments"] = o.Fragments
	}
	if o.Route.IsSet() {
		toSerialize["route"] = o.Route.Get()
	}
	return toSerialize, nil
}

func (o *MediaToTextRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sourceLanguage",
		"targetLanguages",
		"url",
		"format",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMediaToTextRequest := _MediaToTextRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMediaToTextRequest)

	if err != nil {
		return err
	}

	*o = MediaToTextRequest(varMediaToTextRequest)

	return err
}

type NullableMediaToTextRequest struct {
	value *MediaToTextRequest
	isSet bool
}

func (v NullableMediaToTextRequest) Get() *MediaToTextRequest {
	return v.value
}

func (v *NullableMediaToTextRequest) Set(val *MediaToTextRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaToTextRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaToTextRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaToTextRequest(val *MediaToTextRequest) *NullableMediaToTextRequest {
	return &NullableMediaToTextRequest{value: val, isSet: true}
}

func (v NullableMediaToTextRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaToTextRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


